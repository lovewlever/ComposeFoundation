plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk CompileSdkVersion

    defaultConfig {
        minSdk MinSdk
        targetSdk TargetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    api 'androidx.browser:browser:1.4.0'
    // AndroidX
    def activity_version = "1.6.1"
    def appcompat_version = "1.6.1"
    def fragment_version = "1.5.5"
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.appcompat:appcompat-resources:$appcompat_version"
    api "androidx.activity:activity-ktx:$activity_version"
    api "androidx.fragment:fragment-ktx:$fragment_version"
    api 'androidx.core:core-ktx:1.9.0'
    // Compose
    api 'androidx.activity:activity-compose:1.6.0'
    api "androidx.compose.ui:ui-tooling-preview:$compose_version"
    api "androidx.compose.ui:ui:$compose_version"
    api "androidx.compose.ui:ui-util:$compose_version"
    api "androidx.compose.ui:ui-tooling:$compose_version"
    api "androidx.compose.animation:animation:$compose_version"
    api "androidx.compose.material:material:$compose_version"
    api "androidx.compose.foundation:foundation:$compose_version"
    api "androidx.compose.runtime:runtime-livedata:$compose_version"
    api "androidx.compose.ui:ui-viewbinding:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // Navigation
    //api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    //api "androidx.navigation:navigation-ui-ktx:$nav_version"
    api "androidx.navigation:navigation-compose:$nav_version"

    // Room
    api "androidx.room:room-runtime:$room_version"
    api "androidx.room:room-ktx:$room_version"

    // Timber
    api 'com.jakewharton.timber:timber:5.0.1'
    //api "androidx.media:media:1.6.0"

    // DataStore
    api "androidx.datastore:datastore-preferences-core:1.0.0"
    api "androidx.datastore:datastore-preferences:1.0.0"

    // Retrofit2/Okhttp3
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.retrofit2:converter-gson:2.9.0"
    api "com.squareup.okhttp3:okhttp:4.10.0"
    //api "com.squareup.okhttp3:logging-interceptor:4.9.2"

    // Paging3
    api "androidx.paging:paging-runtime-ktx:3.1.1"
    api "androidx.paging:paging-compose:1.0.0-alpha16"

    // lifecycle
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    api "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    api "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    //Gson
    api "com.google.code.gson:gson:2.9.1"

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_compiler_version"

    // accompanist
    api "com.google.accompanist:accompanist-systemuicontroller:$accompanist"
    api "com.google.accompanist:accompanist-insets:$accompanist"
    api "com.google.accompanist:accompanist-swiperefresh:$accompanist"
    api "com.google.accompanist:accompanist-pager:$accompanist"
    api "com.google.accompanist:accompanist-pager-indicators:$accompanist"
    api "com.google.accompanist:accompanist-flowlayout:$accompanist"
    api "com.google.accompanist:accompanist-navigation-animation:$accompanist"
    api "com.google.accompanist:accompanist-permissions:$accompanist"
    api "com.google.accompanist:accompanist-placeholder-material:$accompanist"
    api "com.google.accompanist:accompanist-placeholder:$accompanist"
    api "com.google.accompanist:accompanist-webview:$accompanist"
    // Coil
    api "io.coil-kt:coil-compose:$coil_version"
    api "io.coil-kt:coil-video:$coil_version"
    // Bugly
    //api 'com.tencent.bugly:crashreport:latest.release'
    //api 'com.tencent.bugly:nativecrashreport:latest.release'

    api "androidx.documentfile:documentfile:1.0.1"
    api 'commons-codec:commons-codec:1.15'
    api "androidx.startup:startup-runtime:1.1.1"

    def camerax_version = "1.2.0-beta02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    api("androidx.camera:camera-core:${camerax_version}")
    api("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    api("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX VideoCapture library
    api("androidx.camera:camera-video:${camerax_version}")
    // If you want to additionally use the CameraX View class
    api("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally use the CameraX Extensions library
    api("androidx.camera:camera-extensions:${camerax_version}")

    // Kapt
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Hilt
    api "com.google.dagger:hilt-android:$hilt_plugin_version"
    api "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "com.google.dagger:hilt-compiler:$hilt_plugin_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
}